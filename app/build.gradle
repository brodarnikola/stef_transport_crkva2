apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

def versionMajor = 0
def versionMinor = 9
def versionPatch = 0
def kioskModeEnabled = false

android {
    signingConfigs {
        config {
            keyAlias 'mpl'
            keyPassword 'Nikkiheat1'
//            storeFile file('/home/nikola/Desktop/git/keyStores/mplDevelopment.jks')
            storeFile file('/home/mfatiga/mplDevelopment.jks')
            storePassword 'Nikkiheat1'
        }
    }
    compileSdkVersion 28
    defaultConfig {
        applicationId "hr.sil.android.seeusvehicle"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode versionMajor * 10000 + versionMinor * 100 + versionPatch
        versionName "$versionMajor.$versionMinor.$versionPatch"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            //kiosk mode flag
            buildConfigField 'boolean', 'KIOSK_MODE_ENABLED', (kioskModeEnabled ? "true" : "false")

            //version resource
            versionNameSuffix ".debug${kioskModeEnabled ? "" : ".nokiosk"}"
            resValue "string", "app_version", "${defaultConfig.versionName}${versionNameSuffix}"

            //custom fields
            buildConfigField 'String', 'API_BASE_URL', '"https://lbm.swissinnolab.com/"'
            buildConfigField 'String', 'API_CONTEXT', '"seeus/"'
        }
        demo {
            //kiosk mode flag
            buildConfigField 'boolean', 'KIOSK_MODE_ENABLED', (kioskModeEnabled ? "true" : "false")

            //version resource
            versionNameSuffix ".demo${kioskModeEnabled ? "" : ".nokiosk"}"
            resValue "string", "app_version", "${defaultConfig.versionName}${versionNameSuffix}"

            //custom fields
            buildConfigField 'String', 'API_BASE_URL', '"https://seeusdemoapi.swissinnolab.com/"'
            buildConfigField 'String', 'API_CONTEXT', '"seeus/"'

            //configuration
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            signingConfig signingConfigs.config
        }
        release {
            //kiosk mode flag
            buildConfigField 'boolean', 'KIOSK_MODE_ENABLED', (kioskModeEnabled ? "true" : "false")

            //version resource
            versionNameSuffix "${kioskModeEnabled ? "" : ".nokiosk"}"
            resValue "string", "app_version", "${defaultConfig.versionName}${versionNameSuffix}"

            //custom fields
            buildConfigField 'String', 'API_BASE_URL', '"https://seeusdemoapi.swissinnolab.com/"'
            buildConfigField 'String', 'API_CONTEXT', '"seeus/"'

            //configuration
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.config
        }
    }
    lintOptions {
        abortOnError false
    }
    sourceSets {
        main.java.srcDirs += "src/main/kotlin"
    }
    packagingOptions {
        exclude 'META-INF/app-compileReleaseKotlin.kotlin_module'
        exclude 'META-INF/app_release.kotlin_module'
        exclude 'META-INF/app_debug.kotlin_module'
        exclude 'META-INF/main.kotlin_module'
        exclude 'META-INF/core_release.kotlin_module'
    }
}

configurations.all {
    // Check for updates every build
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

dependencies {
    //default
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0-beta01'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0-beta01'

    //EventBus
    implementation 'org.greenrobot:eventbus:3.1.1'

    //support
    def supportLibraryVersion = "28.0.0"
    implementation "com.android.support:appcompat-v7:$supportLibraryVersion"
    implementation "com.android.support:support-v13:$supportLibraryVersion"
    implementation "com.android.support:support-compat:$supportLibraryVersion"
    implementation "com.android.support:design:$supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$supportLibraryVersion"

    // Constraint Layout
    def constraintLayoutVersion = "1.1.3"
    implementation "com.android.support.constraint:constraint-layout:$constraintLayoutVersion"

    //kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    //coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.1.1"
    //retrofit2 coroutine extensions
    implementation 'ru.gildor.coroutines:kotlin-coroutines-retrofit:1.1.0'

    //logging
    implementation "org.slf4j:slf4j-api:$slf4jVersion"
    implementation "org.slf4j:slf4j-android:$slf4jVersion"

    // androidx
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.1.0-alpha05'
    implementation 'androidx.core:core-ktx:1.2.0-alpha01'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    // 1: Room Components
    def roomVersion = "1.1.1"
    implementation "android.arch.persistence.room:runtime:$roomVersion"
    kapt "android.arch.persistence.room:compiler:$roomVersion"

    // 2: Lifecycle Components
    def lifecycleVersion = "1.1.1"
    implementation "android.arch.lifecycle:extensions:$lifecycleVersion"

    // 3: Navigation Components
    def navigationVersion = "1.0.0"
    implementation "android.arch.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "android.arch.navigation:navigation-ui-ktx:$navigationVersion"

    //logging
    def slf4jVersion = "1.7.25"
    api "org.slf4j:slf4j-api:$slf4jVersion"
    api "org.slf4j:slf4j-android:$slf4jVersion"

    //SIL libraries
    implementation('hr.sil.android.rest:core:1.2.30')// { changing = true }
    implementation('hr.sil.android:util:1.1.0')// { changing = true }
    implementation('hr.sil.android:view_util:1.1.5')// { changing = true }
    implementation('hr.sil.android.datacache:android_datacache:2.1.8')// { changing = true }
    implementation('hr.sil.android.usbninacommunicator:usb_nina_communicator:1.0.4')// { changing = true }

    //FCM notifications
    implementation 'com.google.firebase:firebase-core:16.0.9'
    implementation 'com.google.firebase:firebase-messaging:18.0.0'
    implementation 'com.firebase:firebase-jobdispatcher:0.8.5'

    //Utils
    implementation 'com.google.android:flexbox:1.0.0'
    implementation 'com.google.android.gms:play-services-location:16.0.0'

    implementation 'com.google.android.gms:play-services-maps:16.1.0'

    //debug
    implementation 'testfairy:testfairy-android-sdk:1.8.1@aar'

    implementation 'io.fotoapparat:fotoapparat:2.7.0'
}

apply plugin: 'com.google.gms.google-services'